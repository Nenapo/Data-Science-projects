# Load libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

#a.Build a simple linear model where dependent variable is ‘MonthlyCharges’ and independent variable is ‘tenure’
  
# defining independent & dependent variable
x=customer_data.tenure
y=customer_data.MonthlyCharges

# convert both x & y into matrix
X = np.asmatrix(x)
Y = np.asmatrix(y)

#reshape both the matrix
x= X.reshape(-1,1)
y= Y.reshape(-1,1)

#i.Divide the dataset into train and test sets in 70:30 ratio. 
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=0)

#ii.Build the model on train set and predict the values on test set

#storingh the model in the variable named Linreg
Linreg =LinearRegression()

#train the model as per train data
Linreg.fit(x_train,y_train)

#predict the values in test data
y_pred = Linreg.predict(x_test)

#checking accuracy
from sklearn.metrics import r2_score
r2_score(y_test,y_pred)

#iii.After predicting the values, find the root mean square error
#v.find the root mean square error

from sklearn.metrics import mean_squared_error
from math import sqrt

rmse = np.sqrt(mean_squared_error(y_test, y_pred))
rmse

#iv.Find out the error in prediction & store the result in ‘error’
from sklearn import metrics  
error=(metrics.mean_absolute_error(y_test, y_pred))
print(error) 
